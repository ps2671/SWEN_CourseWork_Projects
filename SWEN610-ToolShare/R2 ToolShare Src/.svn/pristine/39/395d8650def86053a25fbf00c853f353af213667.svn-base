# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-11-14 22:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShareZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipCode', models.CharField(max_length=5, unique=True)),
                ('has_CommunityShed', models.NullBooleanField(default=False)),
                ('CommunityShedLocation', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToolAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ToolBorrowed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrowerId', models.CharField(max_length=100)),
                ('notified', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ToolRejected',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requesterId', models.CharField(max_length=100)),
                ('rejectionReason', models.CharField(max_length=500)),
                ('notified', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ToolRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requester_id', models.CharField(max_length=100)),
                ('requestedFromDate', models.DateField()),
                ('requestedToDate', models.DateField()),
                ('requestStatus', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ToolReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=100)),
                ('requestId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolRequest')),
            ],
        ),
        migrations.CreateModel(
            name='ToolReturned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requesterId', models.CharField(max_length=100)),
                ('rating', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Bad', 'Bad'), ('Worst', 'Worst')], max_length=6)),
                ('requestId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolRequest')),
            ],
        ),
        migrations.CreateModel(
            name='ToolsRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameOfTheTool', models.CharField(max_length=100)),
                ('addressOfTheTool', models.CharField(max_length=100)),
                ('statusOfTheTool', models.CharField(default='Available', max_length=11)),
                ('categoryOfTheTool', models.CharField(choices=[('Axe', 'Axe'), ('Hammer', 'Hammer'), ('Screw', 'Screw'), ('Shovel', 'Shovel')], max_length=6)),
                ('conditionOfTheTool', models.CharField(choices=[('Good', 'Good'), ('Bad', 'Bad'), ('Ok', 'ok')], max_length=4)),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('toolDescription', models.CharField(max_length=500)),
                ('requested', models.BooleanField(default=False)),
                ('requester_id', models.CharField(default='0', max_length=100)),
                ('borrowed', models.BooleanField(default=False)),
                ('borrower_id', models.CharField(default='0', max_length=100)),
            ],
            options={
                'ordering': ['-nameOfTheTool'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('zipCode', models.CharField(max_length=5)),
                ('first_Name', models.CharField(max_length=25)),
                ('last_Name', models.CharField(max_length=25)),
                ('pickupArrangements', models.CharField(max_length=25)),
                ('date', models.DateField()),
                ('is_admin', models.NullBooleanField(default=False)),
                ('request', models.NullBooleanField(default=False)),
                ('ShareZone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='firstApp.ShareZone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='toolsregister',
            name='userProfile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.UserProfile'),
        ),
        migrations.AddField(
            model_name='toolreturned',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
        migrations.AddField(
            model_name='toolreturn',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
        migrations.AddField(
            model_name='toolrequest',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
        migrations.AddField(
            model_name='toolrejected',
            name='requestId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolRequest'),
        ),
        migrations.AddField(
            model_name='toolrejected',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
        migrations.AddField(
            model_name='toolborrowed',
            name='requestId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolRequest'),
        ),
        migrations.AddField(
            model_name='toolborrowed',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
        migrations.AddField(
            model_name='toolavailability',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.ToolsRegister'),
        ),
    ]
